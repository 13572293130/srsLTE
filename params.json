{"name":"libLTE","tagline":"Open source library for 3GPP LTE eNodeB + UE ","body":"libLTE\r\n========\r\n\r\nlibLTE is a free and open-source LTE library for SDR UE and eNodeB. The library does not rely on any external dependencies or frameworks. \r\n\r\nThe license is LGPLv3.\r\n\r\nThe project contains a set of Python tools for the automatic code generation of modules for popular SDR frameworks, including GNURadio, ALOE++, IRIS, and OSSIE. These tools are easy to use and adapt for generating targets for specific platforms or frameworks. \r\n\r\nCurrent Status\r\n===============\r\n\r\nThe following parts are available:\r\n * Physical Broadcast channel (PBCH) eNodeB and UE part. The UE supports multi-antenna transmitters\r\n * Synchronization and CFO estimation/correction\r\n * Equalization\r\n * UE receiver verified with live LTE signals\r\n\r\nHardware\r\n========\r\n\r\nThe library currently uses Ettus Universal Hardware Driver (UHD). Thus, any hardware supported by UHD can be used. There is no sampling rate conversion, therefore the hardware should support 30.72 MHz clock in order to work correctly with LTE sampling frequencies and decode signals from live LTE base stations. \r\n\r\n\r\nDownload & Install Instructions\r\n=================================\r\n\r\n* Requirements: Currently, the library requires libfftw, although we plan make this dependency optional in the future. Also, QT4 and Qwt6 are needed for graphics visualization. If they are not present, though, compilation is still possible although graphics will be disabled. \r\n\r\n```\r\ngit clone https://github.com/ismagom/libLTE.git\r\ncd libLTE\r\nmkdir build\r\ncd build\r\ncmake ../\r\nmake \r\n```\r\n\r\nThe library can also be installed using the command ```sudo make install```. \r\n\r\nExamples\r\n==========\r\n\r\n* eNodeB and UE PBCH example\r\n\r\nSetup one or two computers connected to two USRP or UHD-compatible hardware. From the eNodeB, type\r\n\r\n```\r\nexamples/enodeb_bch -f [frequency_in_Hz] -c [cell_id] [-a [UHD args]] [-h for more commands]\r\n```\r\n\r\nFrom the UE, type \r\n```\r\nexamples/mib_track -f [frequency_in_Hz] -c [cell_id] [-a [UHD args]] [-h for more commands]\r\n```\r\n\r\nAnd the output should look something like the following video. In this example, we removed the transmitter and receiver antennas in the middle of the demonstration, showing how reception is still possible (despite with some erros). \r\n\r\nhttps://www.dropbox.com/s/txh1nuzdb0igq5n/demo_pbch.ogv\r\n\r\n![Screenshopt of the PBCH example output](pbch_capture.png \"Screenshopt of the PBCH example output\")\r\n\r\n\r\nIf you don't have a pair of USRP, you can also test the demo by writing the samples to a file and then reading them: \r\n\r\nFrom the eNodeB, type\r\n\r\n```\r\nexamples/enodeb_bch -o [output_file] -c [cell_id] [-h for more commands]\r\n```\r\n\r\nFrom the UE, type \r\n```\r\nexamples/mib_track -i [input_file] -c [cell_id] [-h for more commands]\r\n```\r\n\r\n\r\n* Cell Search Example\r\n\r\nThis program uses any hardware supported by the UHD driver to scan an LTE band for active cells. See http://niviuk.free.fr/lte_band.php for a list of available bands. The program first obtains a power spectral density of the entire band. For all frequencies with an RSSI higher than a threshold, it tries to find the LTE Primary Synchronization Signal (PSS) and then identifies the CELL ID using the Secondary Synchronization Signal (SSS). Finally, it estimates the Carrier Frequency Offset (CFO) and Sampling Frequency Offset (SFO) and decodes the Master Information Block (MIB) from the PBCH. \r\n\r\nFor instance, the command:\r\n\r\n``` examples/mib_scan_usrp -b 3 ```\r\n\r\n\r\nScans the LTE band 3 (1805 to 1880 MHz). Note that you need a hardware supporting these frequencies (e.g. SBX daughterboard for USRP). For more command arguments, type ``` examples/mib_scan_usrp -h ```\r\n\r\n\r\n\r\nSupport\r\n========\r\n\r\nMailing list: https://lists.sourceforge.net/lists/listinfo/liblte-users\r\n","google":"UA-48817026-1","note":"Don't delete this file! It's used internally to help with page regeneration."}